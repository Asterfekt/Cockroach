/*
 * steps.c
 *
 *  Created on: Jul 25, 2023
 *      Author: Mateusz Krzy≈õciak
 */


#include "main.h"
#include "i2c.h"
#include "steps.h"
#include "math.h"
#include "pca9685.h"

#define SERVO_COUNT	5
 uint8_t ActiveServo;
int first()
{
				PCA9685_SetServoAngle(0, 45);
				PCA9685_SetServoAngle(1, 45);
				PCA9685_SetServoAngle(2, 45);
				PCA9685_SetServoAngle(3, 0);
				PCA9685_SetServoAngle(4, 45);
				PCA9685_SetServoAngle(5, 0);
				PCA9685_SetServoAngle(6, 0);
				PCA9685_SetServoAngle(7, 45);
				PCA9685_SetServoAngle(8, 0);
				PCA9685_SetServoAngle(9, 0);
				PCA9685_SetServoAngle(10, 0);
				PCA9685_SetServoAngle(11, 0);

//	 for (uint8_t Angle = 0; Angle < 45; Angle++) {
	//			 PCA9685_SetServoAngle(3, Angle);
		//	    }
/*

		 for (uint8_t Angle = 0; Angle < 45; Angle++) {
			 // PCA9685_SetServoAngle(2, Angle);
			  PCA9685_SetServoAngle(3, Angle);
		    }
		  HAL_Delay(500);
		  for (uint8_t Angle = 0; Angle < 45; Angle++) {
		 			 PCA9685_SetServoAngle(2, Angle);
		 			//  PCA9685_SetServoAngle(3, Angle);
		 		    }
		 		  HAL_Delay(500);

		  for (uint16_t Angle = 45; Angle > 0; Angle--) {
			 // PCA9685_SetServoAngle(2, Angle);
			  PCA9685_SetServoAngle(3, Angle);
		  }
		  HAL_Delay(500);
		  for (uint8_t Angle = 45; Angle > 0; Angle--) {
		 		 			 PCA9685_SetServoAngle(2, Angle);
		 		 			 // PCA9685_SetServoAngle(3, Angle);
		 		 		    }
		 		 		  HAL_Delay(500);

*/

			 if (ActiveServo >= SERVO_COUNT) ActiveServo = 0;
			  return 0;
}
